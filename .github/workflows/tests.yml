name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  python-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install -r requirements.txt
        
    - name: Run Python tests
      run: |
        python3 -m pytest tests/ -v --cov=src --cov-report=xml --cov-report=term -m 'not e2e'
        
    - name: Upload Python coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: python
        name: python-coverage

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: volatility-web/package-lock.json
        
    - name: Install dependencies
      working-directory: ./volatility-web
      run: npm ci
      
    - name: Run frontend tests
      working-directory: ./volatility-web
      run: npm test -- --coverage --watchAll=false
      
    - name: Run frontend linting
      working-directory: ./volatility-web
      run: npm run lint
      
    - name: Upload frontend coverage
      uses: codecov/codecov-action@v3
      with:
        directory: ./volatility-web/coverage
        flags: frontend
        name: frontend-coverage

  integration-tests:
    runs-on: ubuntu-latest
    needs: [python-tests, frontend-tests]
    
    services:
      # Mock Anthropic API for integration tests
      mock-api:
        image: mockserver/mockserver:latest
        ports:
          - 1080:1080
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Python dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install -r requirements.txt
        
    - name: Run integration tests
      env:
        ANTHROPIC_API_KEY: mock-test-key
        MOCK_SERVER_URL: http://localhost:1080
      run: |
        python3 -m pytest tests/ -v -m e2e
        
  docker-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Create .env file for CI
      run: |
        cd docker
        cat > .env << EOF
        # CI Configuration
        ANTHROPIC_API_KEY=test-key
        
        # Glitchtip Configuration
        POSTGRES_DB=glitchtip
        POSTGRES_USER=glitchtip
        POSTGRES_PASSWORD=ci-test-password
        POSTGRES_HOST=postgres
        POSTGRES_PORT=5432
        
        REDIS_HOST=redis
        REDIS_PORT=6379
        
        DATABASE_URL=postgresql://glitchtip:ci-test-password@postgres:5432/glitchtip
        REDIS_URL=redis://redis:6379/0
        SECRET_KEY=ci-test-secret-key-not-for-production
        GLITCHTIP_DOMAIN=http://localhost:8080
        EMAIL_URL=smtp://localhost:25
        DEFAULT_FROM_EMAIL=glitchtip@localhost
        GLITCHTIP_DSN=http://test@localhost:8080/1
        EOF
        
    - name: Build Docker images
      run: |
        cd docker
        docker compose build
        
    - name: Test Docker containers
      run: |
        cd docker
        docker compose up -d
        sleep 10
        curl -f http://localhost:7000/api/health || exit 1
        curl -f http://localhost:3001 || exit 1
        docker compose down